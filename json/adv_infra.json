{
  "$schema" : "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion" : "1.0.0.0",
  "parameters" : {
    "baseName" : {
      "type" : "string",
      "minLength" : 1,
      "metadata" : {
        "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
      }
    },
    "virtualNetworkResourceGroup" : {
      "type" : "string",
      "metadata" : {
        "description" : "Location of the virtual network resource group"
      }
    },
    "virtualNetworkName" : {
      "type" : "string",
      "metadata" : {
        "description" : "Name of the virtual network in virtualNetworkResourceGroup"
      }
    },
    "masterSubnetName" : {
      "type" : "string",
      "metadata" : {
        "description" : "Name of the master subnet"
      }
    },
    "serviceSubnetName" : {
      "type" : "string",
      "metadata" : {
        "description" : "Name of the worker subnet"
      }
    },
    "internalLoadBalancerIP" : {
      "type" : "string",
      "metadata" : {
        "description" : "IP address assigned to the internal private loadbalancer for api & api-int"
      }
    },
    "internalAppsLoadBalancerIP" : {
      "type" : "string",
      "metadata" : {
        "description" : "IP address assigned to the internal private loadbalancer for *.apps"
      }
    },
    "privateDNSZoneName" : {
      "type" : "string",
      "metadata" : {
        "description" : "Name of the private DNS zone"
      }
    },
    "internalLoadBalancerAPIINT": {
      "type": "string",
      "metadata": {
        "description" : "IP address assigned to the internal api"
      }
    }
  },
  "variables" : {
    "location" : "[resourceGroup().location]",
    "virtualNetworkID" : "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', parameters('masterSubnetName'))]",
    "serviceSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', parameters('serviceSubnetName'))]",
    "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
    "internalLoadBalancerID" : "[resourceId('Microsoft.Network/loadBalancers', variables('internalLoadBalancerName'))]",
    "skuName": "Standard"
  },
  "resources" : [
    {
      "apiVersion" : "2018-12-01",
      "type" : "Microsoft.Network/loadBalancers",
      "name" : "[variables('internalLoadBalancerName')]",
      "location" : "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties" : {
        "frontendIPConfigurations" : [
          {
            "name" : "internal-lb-ip",
            "properties" : {
              "privateIPAllocationMethod" : "Static",
              "privateIPAddress": "[parameters('internalLoadBalancerIP')]",
              "subnet" : {
                "id" : "[variables('masterSubnetRef')]"
              },
              "privateIPAddressVersion" : "IPv4"
            }
          },
          {
            "name" : "internal-lb-apiint",
            "properties" : {
              "privateIPAllocationMethod" : "Static",
              "privateIPAddress": "[parameters('internalLoadBalancerAPIINT')]",
              "subnet" : {
                "id" : "[variables('masterSubnetRef')]"
              },
              "privateIPAddressVersion" : "IPv4"
            }
          },
          {
            "name": "internal-apps-ip",
            "properties": {
                "privateIPAddress": "[parameters('internalAppsLoadBalancerIP')]",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                    "id": "[variables('serviceSubnetRef')]"
                },
                "privateIPAddressVersion": "IPv4"
            }
        }
        ],
        "backendAddressPools" : [
          {
            "name": "internal-lb-backend",
            "properties": {
                "loadBalancerBackendAddresses": []
            }
          },
          {
            "name": "internal-apps-backend",
            "properties": {
                "loadBalancerBackendAddresses": []
            }
          }
        ],
        "loadBalancingRules" : [
          {
            "name" : "api-internal",
            "properties" : {
              "frontendIPConfiguration" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
              },
              "frontendPort" : 6443,
              "backendPort" : 6443,
              "enableFloatingIP" : false,
              "idleTimeoutInMinutes" : 30,
              "protocol" : "Tcp",
              "enableTcpReset" : false,
              "loadDistribution" : "Default",
              "backendAddressPool" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
              },
              "probe" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/probes/api-internal-probe')]"
              }
            }
          },
          {
            "name" : "sint",
            "properties" : {
              "frontendIPConfiguration" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
              },
              "frontendPort" : 22623,
              "backendPort" : 22623,
              "enableFloatingIP" : false,
              "idleTimeoutInMinutes" : 30,
              "protocol" : "Tcp",
              "enableTcpReset" : false,
              "loadDistribution" : "Default",
              "backendAddressPool" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
              },
              "probe" : {
                "id" : "[concat(variables('internalLoadBalancerID'), '/probes/sint-probe')]"
              }
            }
          },
          {
            "name": "apps-http",
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-apps-ip')]"
                },
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 30,
                "protocol": "Tcp",
                "enableTcpReset": false,
                "loadDistribution": "Default",
                "disableOutboundSnat": false,
                "backendAddressPool": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-apps-backend')]"
                },
                "probe": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/probes/apps-http-probe')]"
                }
              }
            },
            {
            "name": "apps-https",
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-apps-ip')]"
                },
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 30,
                "protocol": "Tcp",
                "enableTcpReset": false,
                "loadDistribution": "Default",
                "disableOutboundSnat": false,
                "backendAddressPool": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-apps-backend')]"
                },
                "probe": {
                    "id": "[concat(variables('internalLoadBalancerID'), '/probes/apps-https-probe')]"
                }
              }
            }
        ],
        "probes" : [
          {
            "name" : "api-internal-probe",
            "properties" : {
              "protocol" : "Https",
              "port" : 6443,
              "requestPath": "/readyz",
              "intervalInSeconds" : 10,
              "numberOfProbes" : 3
            }
          },
          {
            "name" : "sint-probe",
            "properties" : {
              "protocol" : "Https",
              "port" : 22623,
              "requestPath": "/healthz",
              "intervalInSeconds" : 10,
              "numberOfProbes" : 3
            }
          },
          {
              "name": "apps-https-probe",
              "properties": {
                  "protocol": "Https",
                  "port": 1936,
                  "requestPath": "/healthz",
                  "intervalInSeconds": 10,
                  "numberOfProbes": 3
              }
          },
          {
              "name": "apps-http-probe",
              "properties": {
                  "protocol": "Http",
                  "port": 1936,
                  "requestPath": "/healthz",
                  "intervalInSeconds": 10,
                  "numberOfProbes": 3
              }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-09-01",
      "type": "Microsoft.Network/privateDnsZones/A",
      "name": "[concat(parameters('privateDNSZoneName'), '/api')]",
      "location" : "[variables('location')]",
      "dependsOn" : [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
      ],
      "properties": {
        "ttl": 60,
        "aRecords": [
          {
            "ipv4Address": "[reference(variables('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
          }
        ]
      }
    },
    {
      "apiVersion": "2018-09-01",
      "type": "Microsoft.Network/privateDnsZones/A",
      "name": "[concat(parameters('privateDNSZoneName'), '/api-int')]",
      "location" : "[variables('location')]",
      "dependsOn" : [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
      ],
      "properties": {
        "ttl": 60,
        "aRecords": [
          {
            "ipv4Address": "[parameters('internalLoadBalancerIP')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2018-09-01",
      "type": "Microsoft.Network/privateDnsZones/A",
      "name": "[concat(parameters('privateDNSZoneName'), '/*.apps')]",
      "location" : "[variables('location')]",
      "dependsOn" : [
        "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
      ],
      "properties": {
        "ttl": 60,
        "aRecords": [
          {
            "ipv4Address": "[parameters('internalAppsLoadBalancerIP')]"
          }
        ]
      }
    }
  ]
}
